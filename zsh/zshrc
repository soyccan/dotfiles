# Profiling begin
# zmodload zsh/zprof


# Check if command exists, return 0 on success
# MUCH faster than external program `which` since this don't
# require forking process
# Bash equivalence: command -v
has() {
    whence "$1" &>/dev/null
}


# Launch tmux at start
if [ -z "$TMUX" ] && [ "$HOST" != 'soyccanmac.local' ]; then
    tmux a -d
fi

# Pull new changes of dotfiles, in background
(git -C "$HOME/dotfiles" pull &>/dev/null &)


################
# Environments #
################
# PATH
# ignore error when globbing fails (/path/to/some/dir/* not exist)
setopt null_glob

paths=('/opt/brew/bin'
       '/snap/bin'
       "$HOME/go/bin"
       "$HOME/.rvm/bin"
       "$HOME/.pyenv/bin")

# Ruby gems
for x in "$HOME"/.gem/ruby/*; do
    paths+=("$x/bin")
done

# Python pips
# Linux
paths+=("$HOME/.local/bin")
# masOS
paths+=(/Library/Frameworks/Python.framework/Versions/Current/bin)
for x in /Users/soyccan/Library/Python/*/bin; do
    paths+=("$x")
done

# Later elements in $path have priority
for p in $paths; do
    [ -d "$p" ] && PATH="$p:$PATH"
done

unset paths
export PATH

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if has nvim; then
    export EDITOR='nvim'
elif has vim; then
    export EDITOR='vim'
elif has vi; then
    export EDITOR='vi'
fi

# Homebrew
export HOMEBREW_NO_AUTO_UPDATE=1


###########
# Plugins #
###########
### Added by Zinit's installer
if [ ! -f "$HOME/.zinit/bin/zinit.zsh" ]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

# Load colors
# Plugin `colored-man-pages` requires this
autoload -Uz colors
colors

# The inner expansion follows ${name:-word} form, so as the variable called
# `name` (which is empty string) does not exist, the value will be given from
# `word` (which is "%x"). Refer to:
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion
#
# The %x is a prompt escape indicating the file being sourced. Refer to:
# http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Shell-state
#
# And the (%) is a parameter expansion flag that expands the %x. Refer to:
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion-Flags
#
# The outer expansion has P modifier that calls realpath() to obtain the
# absolute path, and h modifier to obtain dirname. Refer to:
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Modifiers
#
source_dir="${${(%):-%x}:P:h}"

source "$source_dir/plugins.zsh"
source "$source_dir/aliases.zsh"
source "$source_dir/brewit.zsh"


###############
# Completions #
###############
# Completion Path
# TODO: is this right
fpath+=($HOME/dotfiles/zsh)


# Profiling end
# zprof
