# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
# for Ubuntu snap
export PATH=/snap/bin:$PATH
# for MacPorts
# export PATH=/opt/local/bin:/opt/local/sbin:$PATH
# for Python on Mac
export PATH=/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_MODE='nerd-complete'
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir dir_writable vcs virtualenv)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status background_jobs command_execution_time)

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  # third-party plugins, require clone from git+https://github.com/zsh-users/...
  zsh-autosuggestions
  zsh-completions
  zsh-syntax-highlighting

  # completions
  django
  docker
  fd
  heroku
  httpie # coloured curl
  pip
  ripgrep # alternative to grep / ag / ack

  # aliases
  brew # bubu = brew update|outdated|upgrade|cleanup
  docker-compose # dcb, dcup
  firewalld # fw / fwr / fwp / fwrp / fwl
  nmap # nmap_open_ports ...
  git # ga, gc, gcl, gl, gp, ...
  pipenv # pi = pipenv install
  pylint # pylint-quick
  rails # rc / rs ...
  rsync # rsync-copy / rsync-move / rsync-update / rsync-synchronize
  systemd # sc-xxxx

  # functions
  cp # cpv = rsync -pogbr -hhh --backup-dir=/tmp/rsync -e /dev/null --progress
  encode64 # e64 / d64
  extract # extract or x
  colorize # ccat
  jsontools # pp_json / is_json / urlencode_json / urldecode_json
  systemadmin # ping / mkdir / clr / path / pscpu / psmem...
  vscode
  urlencode # should use the one in custom/
#   osx
#   xcode # xcb

  # plugins
  autoenv
  colored-man-pages
  transfer # transfer.sh
  zsh_reload # src

  # disabled due to heavy start-up impact
#   command-not-found
#   thefuck
)


source $ZSH/oh-my-zsh.sh

# User configuration
export TERM="xterm-256color"

# copied from globalias.plugin.zsh
globalias() {
    zle _expand_alias
    #zle expand-word
    zle self-insert
}
zle -N globalias
# space expands all aliases, including global
bindkey -M emacs " " globalias
bindkey -M viins " " globalias
# control-space to make a normal space
bindkey -M emacs "^ " magic-space
bindkey -M viins "^ " magic-space
# normal space during searches
bindkey -M isearch " " magic-space

# launch tmux at start
# if [[ -z "$TMUX" ]]; then
#     tmux list-sessions
#     if [[ "$?" = "0" ]]; then
#         tmux a
#     else
#         tmux
#     fi
# fi

# ^N and ^P is originally bind to {up,down}-line-or-history
bindkey "^P" history-search-backward
bindkey "^N" history-search-forward

# make HOME and END key work
# bindkey "^[[1~" beginning-of-line
# bindkey "^[[4~" end-of-line

# export MANPATH="/usr/local/share/man:$MANPATH"
# export MANPATH="/opt/local/share/man:$MANPATH" # MacPorts
# export MANPATH="/Applications/Xcode.app/Contents/Developer/usr/share/man:$MANPATH" # Xcode
# export SSH_KEY_PATH="~/.ssh/rsa_id"


# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# faster homebrew bottle repo
# export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#
alias cp='cp -irv' # --interactive --recursive --verbose
alias mv='mv -iv' # --interactive --verbose
alias rm='rm -i' # --interactive=always

alias df='df -h' # --human-readable
alias du='du -h'  # --human-readable --apparent-size(-A) ; -A connot be used in macOS
alias free='free -h' # --human

alias ctar='tar -vcf' # create tarball
alias ltar='tar -vtf' # list files
alias untar='tar -vxf' # extract
alias lzip='unzip -l'
alias lrar='unrar l'

alias less='less -R' # --RAW-CONTROL-CHARS ; color only
alias ln='ln -s' # --symbolic
alias wget='wget -c' # --continue; (--timestamping)
alias hd='hexdump -C' # hex+ascii
alias gcll='git clone --recurse-submodules --depth 1' # together with 'git' plugin
alias rg='rg -i' # ignore case

alias c='clang -Wall -Wextra -Wconversion -std=c18 -g -Dsoyccan'
alias cpp='clang++ -Wall -Wextra -Wconversion -std=c++17 -g -Dsoyccan'

if [ "$(uname)" = 'Darwin' ]; then
    alias objdump='objdump -x86-asm-syntax=intel'
    alias gobjdump='gobjdump -M intel'
else
    alias objdump='objdump -M intel'
fi


# docker
alias dat='docker attach'
alias db='docker build'
alias dcon='docker container'
alias dim='docker image'
alias diml='docker image ls'
alias dl='docker pull'
alias dps='docker ps'
alias dpsa='docker ps -a'
alias drm='docker rm'
alias drun='docker run -it'
alias dsta='docker start -ai'
alias dsto='docker stop'
alias dex='docker exec -it'

## from common-aliases plugin
# Advanced Aliases.
# Use with caution
#
# ls, the common ones I use a lot shortened for rapid fire usage
# alias l='ls -lFh'     #size,show type,human readable
# alias la='ls -lAFh'   #long list,show almost all,show type,human readable
# alias lr='ls -tRFh'   #sorted by date,recursive,show type,human readable
# alias lt='ls -ltFh'   #long list,sorted by date,show type,human readable
# alias ll='ls -l'      #long list
# alias ldot='ls -ld .*'
# alias lS='ls -1FSsh'
# alias lart='ls -1Fcart'
# alias lrt='ls -1Fcrt'

alias zshrc='${=EDITOR} ~/.zshrc' # Quick access to the ~/.zshrc file

alias grep='grep --color=auto'
alias sgrep='grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} '

alias t='tail -f'

# Command line head / tail shortcuts
alias -g X='| xargs'
alias -g H='| head'
alias -g T='| tail'
alias -g G='| grep'
which rg &>/dev/null && alias -g G='| rg'
alias -g L="| less"
alias -g M="| most"
alias -g LL="2>&1 | less"
alias -g CA="2>&1 | cat -A"
alias -g NE="2> /dev/null"
alias -g NUL="> /dev/null 2>&1"
alias -g P="2>&1| pygmentize -l pytb"

alias dud='du -d 1 -h'
alias duf='du -sh *'
# alias fd='find . -type d -name' # another tool named 'fd' exists
alias ff='find . -type f'

alias h='history'
alias hgrep="fc -El 0 | grep"
alias help='man'
alias p='ps -f'
alias sortnr='sort -n -r'
alias unexport='unset'

# alias rm='rm -i'
# alias cp='cp -i'
# alias mv='mv -i'

# zsh is able to auto-do some kungfoo
# depends on the SUFFIX :)
# if is-at-least 4.2.0; then
#   # open browser on urls
#   if [[ -n "$BROWSER" ]]; then
#     _browser_fts=(htm html de org net com at cx nl se dk)
#     for ft in $_browser_fts; do alias -s $ft=$BROWSER; done
#   fi

#   _editor_fts=(cpp cxx cc c hh h inl asc txt TXT tex)
#   for ft in $_editor_fts; do alias -s $ft=$EDITOR; done

#   if [[ -n "$XIVIEWER" ]]; then
#     _image_fts=(jpg jpeg png gif mng tiff tif xpm)
#     for ft in $_image_fts; do alias -s $ft=$XIVIEWER; done
#   fi

#   _media_fts=(ape avi flv m4a mkv mov mp3 mpeg mpg ogg ogm rm wav webm)
#   for ft in $_media_fts; do alias -s $ft=mplayer; done

#   #read documents
#   alias -s pdf=acroread
#   alias -s ps=gv
#   alias -s dvi=xdvi
#   alias -s chm=xchm
#   alias -s djvu=djview

#   #list whats inside packed file
#   alias -s zip="unzip -l"
#   alias -s rar="unrar l"
#   alias -s tar="tar tf"
#   alias -s tar.gz="echo "
#   alias -s ace="unace l"
# fi

# Make zsh know about hosts already accessed by SSH
zstyle -e ':completion:*:(ssh|scp|sftp|rsh|rsync):hosts' hosts 'reply=(${=${${(f)"$(cat {/etc/ssh_,~/.ssh/known_}hosts(|2)(N) /dev/null)"}%%[# ]*}//,/ })'

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
# export PATH="$PATH:$HOME/.rvm/bin"
